apiVersion: v1
kind: Service
metadata:
  name: web-app-service-load-balancer
spec:
  selector:
    app: web-app
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 81
      targetPort: 8080

#     type: LoadBalancer    => ip provided by cloud service (buy), if not then to connect may be created tunnel (it create ip probably localhost:8080):
#     and then
#   kubectl get svc    =>   web-app-service   LoadBalancer   10.98.42.158     <pending>     8080:31431/TCP   12h
#   minikube tunnel
#   kubectl get svc    =>   web-app-service   LoadBalancer   10.98.42.158     127.0.0.1     8080:31431/TCP   12h
#   curl http://127.0.0.1:8080/web-app/hello    => localhost is 127.0.0.1

#     type: ClusterIP     => service uses only inse the cluster. To get access outside the cluster need proxy (proxy also works for all other types). File sql_service.yml uses ClusterIP
#     and then
#   kubectl proxy --port=8080
#   http://localhost:8080/api/v1/namespaces/default/services/web-app-service/proxy/web-app/hello    =>  pay attention proxy after service name!